{"version":3,"sources":["components/navbar/index.jsx","components/header/index.jsx","components/container/index.jsx","components/pokeContainer/index.jsx","App.jsx","index.jsx"],"names":["Navbar","props","react_default","a","createElement","className","concat","class","guess","score","topScore","Header","Container","children","PokeContainer","onClick","click","id","alt","name","src","image","App","state","guessedArray","pokemonList","_this","repeatCheck","addToGuessedArray","topScoreCheck","shuffle","currentScore","setState","arr","newArr","slice","i","length","rand","Math","floor","random","_ref","clickId","notGuessed","newGuess","forEach","element","index","Object","toConsumableArray","this","_this2","Fragment","navbar","header","container","map","pokemon","pokeContainer","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"26CAiBeA,SAdA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAS,GAAAC,OAAKL,EAAMM,QAAUN,EAAMO,OACxCN,EAAAC,EAAAC,cAAA,oBACUH,EAAMQ,MADhB,iBACqCR,EAAMS,cCIpCC,SAXA,WACb,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,yFCGSQ,EARG,SAAAX,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wEACZJ,EAAMY,wBCQEC,MAVf,SAAuBb,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOU,QAAS,kBAAMd,EAAMe,MAAMf,EAAMgB,MACrDf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKc,IAAKjB,EAAMkB,KAAMC,IAAKnB,EAAMoB,WC6H1BC,6MA5HbC,MAAQ,CACNC,aAAc,GACdC,cACAjB,MAAO,0BACPC,MAAO,EACPC,SAAU,EACVH,MAAO,MAOTS,MAAQ,SAAAC,GACFS,EAAKC,YAAYV,KACnBS,EAAKE,kBAAkBX,GACvBS,EAAKG,cAAcH,EAAKH,MAAMd,OAC9BiB,EAAKI,QAAQJ,EAAKH,MAAME,iBAI5BI,cAAgB,SAAAE,GACVA,EAAeL,EAAKH,MAAMb,SAC5BgB,EAAKM,SAAS,SAAAT,GACZ,MAAO,CACLd,MAAOc,EAAMd,MAAQ,EACrBD,MAAO,gBACPD,MAAO,aAIXmB,EAAKM,SAAS,SAAAT,GACZ,MAAO,CACLd,MAAOc,EAAMd,MAAQ,EACrBD,MAAO,gBACPE,SAAUa,EAAMb,SAAW,EAC3BH,MAAO,aAIQ,KAAjBwB,GACFL,EAAKM,SAAS,SAAAT,GACZ,MAAO,CACLf,MAAO,6CACPD,MAAO,YAUfuB,QAAU,SAAAG,GAER,IADA,IAAMC,EAASD,EAAIE,QACVC,EAAIF,EAAOG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAME,EAAOC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEd,CAACR,EAAOI,GAAOJ,EAAOE,IAAjDF,EAAOE,GAFkCM,EAAA,GAE9BR,EAAOI,GAFuBI,EAAA,GAI5ChB,EAAKM,SAAS,SAAAT,GACZ,MAAO,CAAEE,YAAaS,QAI1BP,YAAc,SAAAgB,GAGZ,IADA,IAAIC,GAAa,EACRR,EAAI,EAAGA,EAAIV,EAAKH,MAAMC,aAAaa,OAAQD,IAClD,GAAIV,EAAKH,MAAMC,aAAaY,GAAGnB,KAAO0B,EAWpC,OAVAjB,EAAKI,QAAQJ,EAAKH,MAAME,aACxBC,EAAKM,SAAS,SAAAT,GACZ,MAAO,CACLd,MAAQc,EAAMd,MAAQ,EACtBD,MAAO,uCACPD,MAAO,YACPiB,aAAc,MAGlBoB,GAAa,EAIjB,OAAOA,KAGThB,kBAAoB,SAAAe,GAClB,IAAIE,EAAW,KACfnB,EAAKH,MAAME,YAAYqB,QAAQ,SAACC,EAASC,GACnCD,EAAQ9B,KAAO0B,IACjBE,EAAWnB,EAAKH,MAAME,YAAYuB,MAGtCtB,EAAKM,SAAS,SAAAT,GAAK,MAAK,CACtBC,aAAY,GAAAlB,OAAA2C,OAAAC,EAAA,EAAAD,CAAM1B,EAAMC,cAAZ,CAA0BqB,2FApFxCM,KAAKrB,QAAQL,oCAwFN,IAAA2B,EAAAD,KACP,OACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMkD,SAAP,KACEnD,EAAAC,EAAAC,cAACkD,EAAD,CACE9C,MAAO2C,KAAK5B,MAAMf,MAClBC,MAAO0C,KAAK5B,MAAMd,MAClBC,SAAUyC,KAAK5B,MAAMb,SACrBH,MAAO4C,KAAK5B,MAAMhB,QAEpBL,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,KACGL,KAAK5B,MAAME,YAAYgC,IAAI,SAAAC,GAAO,OACjCxD,EAAAC,EAAAC,cAACuD,EAAD,CACE1C,GAAIyC,EAAQzC,GACZ2C,IAAKF,EAAQzC,GACbE,KAAMuC,EAAQvC,KACdE,MAAOqC,EAAQrC,MACfL,MAAOoC,EAAKpC,mBApHR6C,mBCFlBC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4c6b7911.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <nav className=\"sticky-top\">\r\n      <ul>\r\n        <li>Bug-Type Pokemon Memory Game</li>\r\n        <li className={`${props.class}`}>{props.guess}</li>\r\n        <li>\r\n          Score: {props.score} | Top Score: {props.topScore}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1>Bug-Type Pokemon Memory Game</h1>\r\n      <h2>\r\n        Click on an image to earn points, but don't click on any more than once!\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Container = props => {\r\n  return (\r\n    <div className=\"container d-flex justify-content-center flex-wrap align-items-center\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction PokeContainer(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.click(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokeContainer;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/navbar/index\";\nimport Header from \"./components/header/index\";\nimport Container from \"./components/container/index\";\nimport pokemonList from \"./pokemon.json\";\nimport PokeContainer from \"./components/pokeContainer/index\";\n\nclass App extends Component {\n  state = {\n    guessedArray: [],\n    pokemonList,\n    guess: \"Click an Image to begin\",\n    score: 0,\n    topScore: 0,\n    class: \"\"\n  };\n\n  componentDidMount() {\n    this.shuffle(pokemonList);\n  }\n\n  click = id => {\n    if (this.repeatCheck(id)) {\n      this.addToGuessedArray(id);\n      this.topScoreCheck(this.state.score);\n      this.shuffle(this.state.pokemonList);\n    }\n  };\n\n  topScoreCheck = currentScore => {\n    if (currentScore < this.state.topScore) {\n      this.setState(state => {\n        return {\n          score: state.score + 1,\n          guess: \"Correct Guess\",\n          class: \"correct\"\n        };\n      });\n    } else {\n      this.setState(state => {\n        return {\n          score: state.score + 1,\n          guess: \"Correct Guess\",\n          topScore: state.topScore + 1,\n          class: \"correct\"\n        };\n      });\n    }\n    if (currentScore === 12) {\n      this.setState(state => {\n        return {\n          guess: \"You won, all 12 pokemon correctly guessed!\",\n          class: \"win\"\n        };\n      });\n    }\n  };\n\n  /* Fisher-Yates Shuffle\n    https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n  */\n\n  shuffle = arr => {\n    const newArr = arr.slice();\n    for (let i = newArr.length - 1; i > 0; i--) {\n      const rand = Math.floor(Math.random() * (i + 1));\n      [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n    }\n    this.setState(state => {\n      return { pokemonList: newArr };\n    });\n  };\n\n  repeatCheck = clickId => {\n    //checks to see if clickedElement has already been guessed\n    let notGuessed = true;\n    for (let i = 0; i < this.state.guessedArray.length; i++) {\n      if (this.state.guessedArray[i].id === clickId) {\n        this.shuffle(this.state.pokemonList);\n        this.setState(state => {\n          return {\n            score: (state.score = 0),\n            guess: \"Incorrect Guess - The Game has Reset\",\n            class: \"incorrect\",\n            guessedArray: []\n          };\n        });\n        notGuessed = false;\n        return notGuessed;\n      }\n    }\n    return notGuessed;\n  };\n\n  addToGuessedArray = clickId => {\n    let newGuess = null;\n    this.state.pokemonList.forEach((element, index) => {\n      if (element.id === clickId) {\n        newGuess = this.state.pokemonList[index];\n      }\n    });\n    this.setState(state => ({\n      guessedArray: [...state.guessedArray, newGuess]\n    }));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar\n          guess={this.state.guess}\n          score={this.state.score}\n          topScore={this.state.topScore}\n          class={this.state.class}\n        />\n        <Header />\n        <Container>\n          {this.state.pokemonList.map(pokemon => (\n            <PokeContainer\n              id={pokemon.id}\n              key={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.image}\n              click={this.click}\n            />\n          ))}\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}